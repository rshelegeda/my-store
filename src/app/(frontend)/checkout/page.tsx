'use client'

import { useState, useEffect } from 'react'
import Link from 'next/link'
import Image from 'next/image'
import styles from './Checkout.module.css'
import CopyButton from '../components/paymentDelivery/CopyButton'
import { DeliveryIcon, PaymentIcon } from '../components/paymentDelivery/PaymentDelivery'

interface CartItem {
  id: number
  title: string
  price: string
  image: string
  quantity: number
}

interface OrderForm {
  firstName: string
  lastName: string
  email: string
  phone: string
  city: string
  address: string
  comment: string
  paymentMethod: 'cash' | 'card'
  deliveryMethod: 'nova_poshta' | ''
}

export default function CheckoutPage() {
  const [cartItems, setCartItems] = useState<CartItem[]>([])
  const [formData, setFormData] = useState<OrderForm>({
    firstName: '',
    lastName: '',
    email: '',
    phone: '',
    city: '',
    address: '',
    comment: '',
    paymentMethod: 'cash',
    deliveryMethod: '',
  })
  const [isSubmitting, setIsSubmitting] = useState(false)
  const [isSubmitted, setIsSubmitted] = useState(false)
  const [isFormValid, setIsFormValid] = useState(false)

  useEffect(() => {
    const savedCart = localStorage.getItem('cart')
    if (savedCart) {
      setCartItems(JSON.parse(savedCart))
    }
  }, [])

  const checkFormValidity = (data: OrderForm) => {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –ø–æ–ª–µ–π
    const requiredFields: (keyof OrderForm)[] = [
      'firstName',
      'lastName',
      'email',
      'phone',
      'city',
      'address',
    ]
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –Ω–µ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
    const allRequiredFieldsFilled = requiredFields.every(
      (field) => data[field] && data[field].trim() !== '',
    )

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –∫–æ—Ä–∑–∏–Ω–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø—É—Å—Ç–æ–π
    const cartIsNotEmpty = cartItems.length > 0

    return allRequiredFieldsFilled && cartIsNotEmpty
  }

  useEffect(() => {
    setIsFormValid(checkFormValidity(formData))
  }, [formData, cartItems]) // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: formData –∏ cartItems

  const handleInputChange = (
    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>,
  ) => {
    const { name, value } = e.target
    setFormData((prev) => ({
      ...prev,
      [name]: value,
    }))
  }

  const removeFromCart = (id: number) => {
    const updatedCart = cartItems.filter((item) => item.id !== id)
    setCartItems(updatedCart)
    localStorage.setItem('cart', JSON.stringify(updatedCart))
    window.dispatchEvent(new CustomEvent('cartUpdated'))
  }

  const updateQuantity = (id: number, quantity: number) => {
    if (quantity <= 0) {
      removeFromCart(id)
      return
    }
    const updatedCart = cartItems.map((item) => (item.id === id ? { ...item, quantity } : item))
    setCartItems(updatedCart)
    localStorage.setItem('cart', JSON.stringify(updatedCart))
    window.dispatchEvent(new CustomEvent('cartUpdated'))
  }

  // –í—Å—Ç–∞–≤—å—Ç–µ —ç—Ç–æ –≤–º–µ—Å—Ç–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π getTotalPrice
  const getTotalPrice = () => {
    return cartItems.reduce((total, item) => {
      // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤ —á–∏—Å–ª–æ, –µ—Å–ª–∏ –æ–Ω–∞ —Å—Ç—Ä–æ–∫–∞,
      // –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–æ —É–∂–µ —á–∏—Å–ª–æ (—Ö–æ—Ç—è TypeScript —ç—Ç–æ–≥–æ –Ω–µ –æ–∂–∏–¥–∞–µ—Ç)
      const price = Number(item.price) || 0

      return total + price * item.quantity
    }, 0)
  }

  const handleCheckout = async (e: React.FormEvent) => {
    e.preventDefault() // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã

    if (!isFormValid) {
      alert("–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å —É—Å—ñ –æ–±–æ–≤'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –∫–æ—à–∏–∫.")
      return // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –µ—Å–ª–∏ —Ñ–æ—Ä–º–∞ –Ω–µ–≤–∞–ª–∏–¥–Ω–∞
    }

    setIsSubmitting(true)

    // 1. –°–æ–±—Ä–∞—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ (–∫–æ—Ä–∑–∏–Ω–∞, —Ñ–æ—Ä–º–∞ –∫–ª–∏–µ–Ω—Ç–∞)
    const orderPayload = {
      name: `${formData.firstName} ${formData.lastName}`, // –û–±—ä–µ–¥–∏–Ω—è–µ–º –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é
      phone: formData.phone,
      address: `${formData.city}, ${formData.address}`, // –û–±—ä–µ–¥–∏–Ω—è–µ–º –≥–æ—Ä–æ–¥ –∏ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ
      email: formData.email,
      delivery: formData.deliveryMethod,
      payment: formData.paymentMethod,
      comment: formData.comment,
      items: cartItems.map((item) => ({
        title: item.title,
        quantity: item.quantity,
        price: item.price,
      })),
      totalPrice: getTotalPrice(),
    }

    try {
      const response = await fetch('/api/send-order', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(orderPayload),
      })

      if (response.ok) {
        // –£—Å–ø–µ—à–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram

        // –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
        localStorage.removeItem('cart')
        setCartItems([])

        // –£–≤–µ–¥–æ–º–ª—è–µ–º –¥—Ä—É–≥–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        window.dispatchEvent(new CustomEvent('cartUpdated'))
        window.dispatchEvent(new CustomEvent('cartCleared'))

        setIsSubmitted(true) // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —É—Å–ø–µ—Ö–∞
      } else {
        const errorData = await response.json()
        console.error('Server error:', errorData)
        alert('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.')
      }
    } catch (error) {
      console.error('Fetch error:', error)
      alert("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º.")
    } finally {
      setIsSubmitting(false)
    }
  }
  const iban = 'UA933052990000026001026105561'
  if (isSubmitted) {
    return (
      <div className={styles.container}>
        <div className={styles.successPage}>
          <h1 className={styles.successTitle}>–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–æ!</h1>

          <div className={styles.successMessage}>
            <p className={styles.mainMessage}>
              –î—è–∫—É—î–º–æ –∑–∞ –≤–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è! –ú–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –≤–∞—à –∑–∞–ø–∏—Ç —ñ –æ–±—Ä–æ–±–∏–º–æ –π–æ–≥–æ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.
            </p>

            <div className={styles.textContent}>
              {/* –ï–î–ò–ù–ê–Ø –ö–ê–†–¢–û–ß–ö–ê: –î–û–°–¢–ê–í–ö–ê –ò –û–ü–õ–ê–¢–ê */}
              <div className={styles.combinedCard}>
                {/* –ë–õ–û–ö –î–û–°–¢–ê–í–ö–ò */}
                <div className={styles.sectionHeader}>
                  <DeliveryIcon /> {/* –ò–∑–º–µ–Ω–µ–Ω–æ: –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–∫–æ–Ω–∫—É –¥–æ—Å—Ç–∞–≤–∫–∏ */}
                  <h3 className={styles.sectionTitle}>–î–æ—Å—Ç–∞–≤–∫–∞</h3>
                </div>
                <p className={styles.deliveryText}>
                  –î–æ—Å—Ç–∞–≤–∫–∞ –∑–¥—ñ–π—Å–Ω—é—î—Ç—å—Å—è <strong>–ù–æ–≤–æ—é –ø–æ—à—Ç–æ—é</strong> —É –±—É–¥—å-—è–∫–µ –º—ñ—Å—Ç–æ –£–∫—Ä–∞—ó–Ω–∏.
                </p>
                <p className={styles.deliveryText}>
                  –í—Å—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —É–ø—Ä–æ–¥–æ–≤–∂ <strong>2-—Ö –¥–Ω—ñ–≤</strong>, —â–æ–± —è–∫–æ–º–æ–≥–∞ —à–≤–∏–¥—à–µ
                  –ø–æ—Ä–∞–¥—É–≤–∞—Ç–∏ –≤–∞—Å.
                </p>
                <div className={styles.separator}></div> {/* –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å */}
                {/* –ë–õ–û–ö –û–ü–õ–ê–¢–´ */}
                <div className={styles.sectionHeader}>
                  <PaymentIcon />
                  <h3 className={styles.sectionTitle}>–û–ø–ª–∞—Ç–∞</h3>
                </div>
                <p className={styles.paymentText}>–û–ø–ª–∞—Ç–∞ —Ç—ñ–ª—å–∫–∏ –Ω–∞ —Ä–∞—Ö—É–Ω–æ–∫ IBAN:</p>
                <div className={styles.ibanContainer}>
                  <div className={styles.ibanBox}>
                    <span className={styles.ibanText}>{iban}</span>
                    <CopyButton iban={iban} />
                  </div>
                </div>
              </div>
            </div>

            <div className={styles.nextSteps}>
              <h3>–©–æ –¥–∞–ª—ñ?</h3>
              <ul>
                <li>–ó–¥—ñ–π—Å–Ω—ñ—Ç—å –æ–ø–ª–∞—Ç—É –Ω–∞ —Ä–∞—Ö—É–Ω–æ–∫ IBAN</li>
                <li>–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –∑–≤&apos;—è–∂–µ—Ç—å—Å—è –∑ –≤–∞–º–∏ –ø—Ä–æ—Ç—è–≥–æ–º 30 —Ö–≤–∏–ª–∏–Ω</li>
                <li>–ú–∏ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∏–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—ñ–≤ —Ç–∞ –¥–µ—Ç–∞–ª—ñ –¥–æ—Å—Ç–∞–≤–∫–∏</li>
                <li>–í–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ SMS –∑ –Ω–æ–º–µ—Ä–æ–º –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è</li>
                <li>–¢–æ–≤–∞—Ä–∏ –±—É–¥—É—Ç—å –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω—ñ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º</li>
              </ul>
            </div>

            <div className={styles.contactInfo}>
              <h3>–ö–æ–Ω—Ç–∞–∫—Ç–∏ –¥–ª—è –∑–≤&apos;—è–∑–∫—É</h3>
              <div className={styles.contactItem}>
                <span className={styles.contactIcon}>üìû</span>
                <span>+380 (99) 905-85-30</span>
              </div>
              <div className={styles.contactItem}>
                <span className={styles.contactIcon}>‚úâÔ∏è</span>
                <span>applecidervinegar@ukr.net</span>
              </div>
            </div>
          </div>

          <div className={styles.actionButtons}>
            <Link href="/" className={styles.primaryButton}>
              –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞ –≥–æ–ª–æ–≤–Ω—É
            </Link>
          </div>
        </div>
      </div>
    )
  }

  if (cartItems.length === 0) {
    return (
      <div className={styles.container}>
        <div className={styles.emptyCart}>
          <div className={styles.emptyCartIcon}>
            <svg
              width="60"
              height="60"
              viewBox="0 0 24 24"
              fill="none"
              stroke="#666"
              strokeWidth="2"
            >
              <circle cx="9" cy="21" r="1"></circle>
              <circle cx="20" cy="21" r="1"></circle>
              <path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"></path>
            </svg>
          </div>
          <h1>–ö–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π</h1>
          <p>–î–æ–¥–∞–π—Ç–µ —Ç–æ–≤–∞—Ä–∏ –¥–æ –∫–æ—à–∏–∫–∞, —â–æ–± –æ—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.</p>
          <Link href="/" className={styles.backToProducts}>
            –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞ –≥–æ–ª–æ–≤–Ω—É
          </Link>
        </div>
      </div>
    )
  }

  return (
    <div className={styles.container}>
      <div className={styles.header}>
        <Link href="/" className={styles.backButton}>
          ‚Üê –ù–∞–∑–∞–¥ –¥–æ –≥–æ–ª–æ–≤–Ω–æ—ó
        </Link>
        <h1>–û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</h1>
      </div>

      <div className={styles.checkoutContent}>
        <div className={styles.orderSummary}>
          <h2>–í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</h2>
          <div className={styles.cartItems}>
            {cartItems.map((item) => (
              <div key={item.id} className={styles.cartItem}>
                <Image
                  src={item.image}
                  alt={item.title}
                  width={60}
                  height={60}
                  className={styles.itemImage}
                />
                <div className={styles.itemInfo}>
                  <h3>{item.title}</h3>
                  <p>{item.price}</p>
                  <div className={styles.quantityControls}>
                    <button
                      onClick={() => updateQuantity(item.id, item.quantity - 1)}
                      className={styles.quantityBtn}
                    >
                      -
                    </button>
                    <span>{item.quantity}</span>
                    <button
                      onClick={() => updateQuantity(item.id, item.quantity + 1)}
                      className={styles.quantityBtn}
                    >
                      +
                    </button>
                  </div>
                </div>
                <button onClick={() => removeFromCart(item.id)} className={styles.removeBtn}>
                  √ó
                </button>
              </div>
            ))}
          </div>
          <div className={styles.totalPrice}>–ó–∞–≥–∞–ª–æ–º: {getTotalPrice()} –≥—Ä–Ω</div>
        </div>

        <form className={styles.orderForm} onSubmit={handleCheckout}>
          <h2>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è</h2>

          <div className={styles.formRow}>
            <div className={styles.formGroup}>
              <label htmlFor="firstName">–Ü–º&apos;—è *</label>
              <input
                type="text"
                id="firstName"
                name="firstName"
                value={formData.firstName}
                onChange={handleInputChange}
                required
              />
            </div>
            <div className={styles.formGroup}>
              <label htmlFor="lastName">–ü—Ä—ñ–∑–≤–∏—â–µ *</label>
              <input
                type="text"
                id="lastName"
                name="lastName"
                value={formData.lastName}
                onChange={handleInputChange}
                required
              />
            </div>
          </div>

          <div className={styles.formGroup}>
            <label htmlFor="email">Email *</label>
            <input
              type="email"
              id="email"
              name="email"
              value={formData.email}
              onChange={handleInputChange}
              required
            />
          </div>

          <div className={styles.formGroup}>
            <label htmlFor="phone">–¢–µ–ª–µ—Ñ–æ–Ω *</label>
            <input
              type="tel"
              id="phone"
              name="phone"
              value={formData.phone}
              onChange={handleInputChange}
              required
            />
          </div>

          <h2>–î–æ—Å—Ç–∞–≤–∫–∞</h2>

          <div className={styles.formGroup}>
            <label htmlFor="deliveryMethod">–°–ø–æ—Å—ñ–± –¥–æ—Å—Ç–∞–≤–∫–∏</label>
            <div className={styles.radioGroup}>
              <label className={styles.radioLabel}>
                <input
                  type="radio"
                  name="deliveryMethod"
                  // –ó–ú–Ü–ù–ê 3: –£–Ω—ñ—Ñ—ñ–∫—É—î–º–æ value
                  value="nova_poshta"
                  checked={formData.deliveryMethod === 'nova_poshta'}
                  onChange={handleInputChange}
                />
                –ù–æ–≤–∞ –ø–æ—à—Ç–∞
              </label>
              {/* –î–æ–¥–∞–π—Ç–µ —ñ–Ω—à—ñ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ —Ç—É—Ç, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ */}
            </div>
          </div>

          <div className={styles.formGroup}>
            <label htmlFor="city">–ú—ñ—Å—Ç–æ *</label>
            <input
              type="text"
              id="city"
              name="city"
              value={formData.city}
              onChange={handleInputChange}
              required
            />
          </div>

          <div className={styles.formGroup}>
            <label htmlFor="address">–ù–æ–º–µ—Ä –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è *</label>
            <input
              type="text"
              id="address"
              name="address"
              value={formData.address}
              onChange={handleInputChange}
              required
            />
          </div>

          <h2>–û–ø–ª–∞—Ç–∞</h2>

          <div className={styles.formGroup}>
            <label>–°–ø–æ—Å—ñ–± –æ–ø–ª–∞—Ç–∏</label>
            <div className={styles.radioGroup}>
              <label className={styles.radioLabel}>
                <input
                  type="radio"
                  name="paymentMethod"
                  value="card"
                  checked={formData.paymentMethod === 'card'}
                  onChange={handleInputChange}
                />
                –û–ø–ª–∞—Ç–∞ –∑–∞ —Ä–µ–∫–≤—ñ–∑–∏—Ç–∞–º–∏ –±–∞–Ω–∫—É
              </label>
            </div>
          </div>

          <div className={styles.formGroup}>
            <label htmlFor="comment">–ö–æ–º–µ–Ω—Ç–∞—Ä –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</label>
            <textarea
              id="comment"
              name="comment"
              value={formData.comment}
              onChange={handleInputChange}
              rows={3}
            />
          </div>

          <button
            type="submit"
            className={styles.submitButton}
            disabled={isSubmitting || !isFormValid}
          >
            {isSubmitting ? '–û—Ñ–æ—Ä–º–ª—è—î–º–æ...' : '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'}
          </button>
        </form>
      </div>
    </div>
  )
}
